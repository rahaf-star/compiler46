import { Component, inject } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ProductService, Product } from './app.product.services';
import { AddProductComponent } from './add-product.component';

import { AsyncPipe } from '@angular/common';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [CommonModule, AsyncPipe,AddProductComponent],
  template: `
    <div class="container">
      <button class="add-button" (click)="openAddModal()">
        إضافة منتج
      </button>

      <!-- Product Display Area -->
      <div class="product-details" *ngIf="(selectedProduct$ | async) as selectedProduct">
        <h2>{{ selectedProduct.name }}</h2>
        <img [src]="selectedProduct.image" alt="{{ selectedProduct.name }}" class="product-image" />
        <p>{{ selectedProduct.details }}</p>
      </div>

      <div class="product-list">
        <div
          class="product-item"
          *ngFor="let product of (products$ | async)"
          (click)="selectProduct(product)">
          <h3>{{ product.name }}</h3>
          <img [src]="product.image" alt="{{ product.name }}" class="product-image" />
        </div>
      </div>

      <!-- Modal Backdrop -->
      <div class="modal-backdrop" *ngIf="showAddModal" (click)="closeAddModal()"></div>

    <!-- Add Product Modal -->
<div class="modal" *ngIf="showAddModal">
  <add-product
    (productAdded)="onProductAdded($event)"
    (close)="closeAddModal()"
  ></add-product>
</div>
    </div>
  `,
  styles: [
    `
      .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
      }

      .add-button {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 20px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        z-index: 100;
      }

      .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 1000;
      }

      .modal {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        padding: 20px;
        border-radius: 8px;
        z-index: 1001;
        width: 80%;
        max-width: 500px;
      }

      .product-details {
        margin-bottom: 20px;
        text-align: center;
      }

      .product-image {
        max-width: 200px;
        height: auto;
        margin-top: 10px;
      }

      .product-list {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin-top: 60px;
      }

      .product-item {
        cursor: pointer;
        border: 1px solid #ddd;
        padding: 15px;
        border-radius: 8px;
        transition: transform 0.2s;
      }

      .product-item:hover {
        transform: scale(1.05);
      }

      .product-item h3 {
        margin: 10px 0;
      }
    `
  ]
})
export class AppComponent {
  title = 'Product Catalog';
  showAddModal = false;
  private productService = inject(ProductService);

  products$ = this.productService.products$;
  selectedProduct$ = this.productService.selectedProduct$;

  openAddModal() {
    this.showAddModal = true;
  }

  closeAddModal() {
    this.showAddModal = false;
  }

  onProductAdded(product: Product) {
    this.productService.addProduct(product);
    this.closeAddModal();
  }

  selectProduct(product: Product) {
    this.productService.selectProduct(product);
  }
}

//************************** add product component *********************************************

import { Component, EventEmitter, Output } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'add-product',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: `
    <div class="add-form">
      <h2>إضافة منتج جديد</h2>
      <button class="close-button" (click)="close.emit()">×</button>
      <form (ngSubmit)="addProduct()">
        <label>
          الاسم:
          <input type="text" [(ngModel)]="name" name="name" required />
        </label>
        <label>
          رابط الصورة:
          <input type="text" [(ngModel)]="image" name="image" required />
        </label>
        <label>
          التفاصيل:
          <textarea [(ngModel)]="details" name="details" required></textarea>
        </label>
        <button type="submit">إضافة</button>
      </form>
    </div>
  `,
  styles: [`
    .add-form {
      position: relative;
      margin-bottom: 30px;
      padding: 15px;
      border-radius: 8px;
      width: 100%;
    }

    .close-button {
      position: absolute;
      top: 10px;
      right: 10px;
      background: none;
      border: none;
      font-size: 24px;
      cursor: pointer;
    }

    label {
      display: block;
      margin-bottom: 10px;
    }

    input, textarea {
      width: 100%;
      padding: 8px;
      margin-top: 4px;
      box-sizing: border-box;
    }

    button[type="submit"] {
      margin-top: 10px;
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
  `]
})
export class AddProductComponent {
  name = '';
  image = '';
  details = '';

  @Output() productAdded = new EventEmitter<{ name: string; image: string; details: string }>();
  @Output() close = new EventEmitter<void>();

  addProduct() {
    if (this.name && this.image && this.details) {
      this.productAdded.emit({
        name: this.name,
        image: this.image,
        details: this.details
      });

      this.name = '';
      this.image = '';
      this.details = '';
    }
  }
}
//************************************sevices**********************************************
// src/app/product.service.ts
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

export interface Product {
  name: string;
  image: string;
  details: string;
}

@Injectable({
  providedIn: 'root'
})
export class ProductService {
  private productsSubject = new BehaviorSubject<Product[]>(this.loadProducts());
  products$ = this.productsSubject.asObservable();

  private selectedProductSubject = new BehaviorSubject<Product | null>(null);
  selectedProduct$ = this.selectedProductSubject.asObservable();

  addProduct(product: Product) {
    const updated = [...this.productsSubject.value, product];
    this.productsSubject.next(updated);
    this.saveProducts(updated);
  }

  selectProduct(product: Product) {
    this.selectedProductSubject.next(product);
  }

  private loadProducts(): Product[] {
    const data = localStorage.getItem('products');
    return data ? JSON.parse(data) : [];
  }

  private saveProducts(products: Product[]) {
    localStorage.setItem('products', JSON.stringify(products));
  }
}